	bool isPossible(int N,int P, vector<pair<int, int> >& prerequisites) {
	    // Code here
	   vector<int>adj[N];
	   for(auto it:prerequisites){
	       adj[it.first].push_back(it.second);
	   }
	    vector<int>ans;
	    int indegree[N]={0};
	    queue<int>q;
	    for(int i=0;i<N;i++){
	       for(auto it:adj[i]){
	           indegree[it]++;
	       }
	    }
	    for(int i=0;i<N;i++){
	        if(indegree[i]==0){
	            q.push(i);
	        }
	    }
	    while(!q.empty()){
	        int node=q.front();
	        q.pop();
	        ans.push_back(node);
	        for(auto it:adj[node]){
	            indegree[it]--;
	            if(indegree[it]==0){
	                q.push(it);
	            }
	        }
	        
	    }
	    if(ans.size()==N){
	        return true;
	    }else{
	        return false;
	    }
	}
