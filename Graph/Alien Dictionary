string findOrder(string dict[], int N, int K) {
        //code here
        vector<int>adj[K];
        for(int i=0;i<N-1;i++){
            string string1=dict[i];
            string string2=dict[i+1];
            int len=min(string1.size(),string2.size());
            for(int j=0;j<len;j++){
                if(string1[j]!=string2[j]){
                    adj[string1[j]-'a'].push_back(string2[j]-'a');
                    break;
                }
            }
        }
        vector<int>ans;
        
        int indegree[K]={0};
        for(int i=0;i<K;i++){
            for(auto it:adj[i]){
                indegree[it]++;
            }
        }
        queue<int>q;
        for(int i=0;i<K;i++){
            if(indegree[i]==0){
                q.push(i);
            }
        }
        while(!q.empty()){
            int node=q.front();
            ans.push_back(node);
            q.pop();
            for(auto it:adj[node]){
                indegree[it]--;
                if(indegree[it]==0){
                    q.push(it);
                }
            }
            
        }
        string res="";
        for(auto it:ans){
            res=res+char(it+'a');
        }
        return res;
        
        
    }
