 private:
    bool dfs(int i,vector<int>adj[],int vis[],int vispath[]){
        vis[i]=1;
        vispath[i]=1;
        
        for(auto it:adj[i]){
           if(!vis[it]){
               if(dfs(it,adj,vis,vispath)==true){
                   return true;
               }
           } else if(vispath[it]==1){
                   return true;
               }
        }
        
        vispath[i]=0;
        return false;
    }
    
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        // code here
        int vis[V]={0};
        int vispath[V]={0};
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(dfs(i,adj,vis,vispath)==true){
                    return true;
                }
            }
        }
        return false;
    }
