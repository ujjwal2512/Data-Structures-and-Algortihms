int singleNonDuplicate(vector<int>& arr) {
       int n=arr.size();
       if(n==1){
               return arr[0];
           }
       int l=0;
       int r=n-1;
       while(l<=r){
           int mid=l+(r-l)/2;
           if(mid==0&&arr[mid+1]!=arr[mid]){
               return arr[mid];
           }
           if(mid==n-1&&arr[mid-1]!=arr[mid]){
               return arr[mid];
           }
           if(arr[mid]!=arr[mid+1]&&arr[mid]!=arr[mid-1]){
               return arr[mid];
           }
           if(arr[mid]==arr[mid+1]){
               if(mid%2==0){
                   l=mid+1;
               }else{
                   r=mid-1;
               }
           }else{
               if(mid%2!=0){
                   l=mid+1;
               }else{
                   r=mid-1;
               }
           }


       }
        return 0;
        
    }
